name: Snyk master workflow example (Open Source, Code, Container, IaC)

on: 
    workflow_call:
      inputs:
        flag:
          required: false
          type: string
      secrets:
        SNYK_TOKEN:
          required: true

# env:
  # Set SNYK_API to a regional endpoint if needed to match your Snyk environment
  # SNYK_API: https://app.eu.snyk.io/api

jobs:
  Snyk-workflow-master:
    runs-on: ubuntu-latest
  
    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3
      
      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2

      # Step 3: Install Snyk CLI and Additional Tools
      - name: Install Snyk CLI
        run: |
          npm install snyk -g
          npm install snyk-filter -g
          npm install snyk-to-html -g

      # Step 4: Authenticate Snyk
      - name: Authenticate Snyk
        run: |
          export SNYK_TOKEN=${{ secrets.SNYK_TOKEN }}
          snyk auth $SNYK_TOKEN --auth-type=token
    
      # Step 5: Install Project Dependencies
      - name: Install Dependencies
        run: npm install

      # Step 6a: Run Snyk Open Source Test
      - name: Run Snyk Test (all projects, severity high+)
        run: snyk test --all-projects --severity-threshold=high --json-file-output=snyk-os-results.json
        continue-on-error: true
        
      # Step 6b: Run Snyk-Filter on Open Source test results
      - name: Run snyk-filter
        run: cat snyk-os-results.json | snyk-filter
        continue-on-error: true
    
      # Step 6c: Generate Snyk Open Source HTML Report
      - name: Generate Snyk Open Source HTML Report
        run: snyk-to-html -i snyk-os-results.json -o snyk-open-source-report.html
        continue-on-error: true
        
      # Step 7a: Run Snyk Code Test 
      - name: Run Snyk Code Test and generate 
        run: snyk code test  --json-file-output=snyk-code-results.json
        continue-on-error: true
    
      # Step 7b: Generate Snyk Code HTML Report 
      - name: Generate Snyk Code HTML Report
        run: snyk-to-html -i snyk-code-results.json -o snyk-code-report.html
        continue-on-error: true
        
      # Step 8: Build image and test using Snyk Container
      - name: Build image from dockerfile and run Snyk Container test
        run: |
          docker build . -t ${GITHUB_REPOSITORY##*/}:${GITHUB_REF_NAME}
          snyk container test ${GITHUB_REPOSITORY##*/}:${GITHUB_REF_NAME} --file=Dockerfile --exclude-app-vulns
        continue-on-error: true

      # Step 9: Run Snyk IaC test
      - name: Run Snyk IaC test
        run: snyk iac test
        continue-on-error: true

      # Step 10: Upload generated HTML reports
      - name: Upload Snyk Open Source Report
        if: always() # Ensure this runs even if the previous step fails
        uses: actions/upload-artifact@v4
        with:
          name: snyk-open-source-report
          path: snyk-open-source-report.html

      - name: Upload Snyk Code Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: snyk-code-report
          path: snyk-code-report.html
